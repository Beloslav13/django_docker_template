version: '3.7'

services:
  db:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=${PASSWORD_DB}
    env_file:
      - .env
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-init.d/init.sql
      - ./docker/db:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    restart: always
  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
  celery:
    restart: always
    build:
      context: .
    command: celery -A docker_tmp worker -l info -f celery.log
    volumes:
    - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
  celery_beat:
    restart: always
    build:
      context: .
    command: celery -A docker_tmp beat -l info -S django -s /celerybeat-schedule -f celery_beat.log
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - celery
      - app
  app:
      build:
        context: .
        dockerfile: Dockerfile
      command:
        - /bin/bash
        - '-c'
# Для первого запуска необходимо сразу применить миграции celery_beat, потом закомментировать если не нужно.
        - python manage.py migrate && sleep 1d
# Последующие запуски
#        - sleep 1d
# Для запуска celery celery_beat через супервизор
#        - service supervisor start && sleep 1d
      volumes:
        - .:/app
#        - ./config/supervisor.conf:/etc/supervisor/conf.d/docker_tmp.conf
      ports:
        - 8000-8010:8000-8010
      env_file:
        - .env
      depends_on:
        - db
        - redis
        - celery